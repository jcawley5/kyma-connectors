apiVersion: kubeless.io/v1beta1
kind: Function
metadata:
  labels:
    app: fieldglass-oauth-handler
  name: fieldglass-oauth-handler
spec:
  deployment:
    spec:
      template:
        spec:
          containers:
          - env:
            - name: clientId
              valueFrom:
                secretKeyRef:
                    name: {{ template "bundle.fullname" . }}
                    key: username
            - name: clientSecret
              valueFrom:
                secretKeyRef:
                    name: {{ template "bundle.fullname" . }}
                    key: password
            - name: oAuthURL
              value: {{ template "oauth_server" . }}
            - name: x_applicationKey
              value: {{ .Values.x_applicationKey | quote }}
            name: fieldglass-oauth-handler
  deps: |-
    {
        "dependencies": {
            "axios": "^0.18.0"
        }
    }
  function: "const axios = require(\"axios\");\n\n//Performs the oAuth request to
    the backend Fieldglass instance\n//clientId and clientSecret are populated from
    the secret fieldglass-connector\n//Example call: \n//const { data: token } = await
    axios.get(\"http://fieldglass-oauth-handler.<namespace>:8080\");\n//console.log(token);\n\nmodule.exports
    = { \n    main: async function (event, context) {\n        //test\n        let
    result = \"\";\n        let url = process.env.oAuthURL;\n        const authValue
    = \"Basic \" + Buffer.from(process.env.clientId + \":\" + process.env.clientSecret).toString('base64');\n
    \       const headers = {\n                \"x-ApplicationKey\": process.env.x_applicationKey,\n
    \               \"Authorization\": authValue,\n                \"Content-Type\":
    \"application/json\"\n        };\n    \n        try {\n            result =  await
    axios.post(url, {}, { headers });\n            console.log(\"successfully obtained
    bearer token\");\n        } catch (error) {\n            console.log(\"An error
    occurred attempting to obtain a bearer token: \", error);\n            throw new
    Error(error);\n        }\n        \n        return  \"Bearer \" + result.data.access_token;\n
    \   } \n}\n"
  function-content-type: text
  handler: handler.main
  horizontalPodAutoscaler:
    metadata:
      creationTimestamp: null
      labels:
        function: fieldglass-oauth-handler
      name: fieldglass-oauth-handler
    spec:
      maxReplicas: 1
      metrics:
      - resource:
          name: cpu
          targetAverageUtilization: 50
        type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1beta1
        kind: Deployment
        name: fieldglass-oauth-handler
    status:
      conditions: null
      currentMetrics: null
      currentReplicas: 0
      desiredReplicas: 0
  runtime: nodejs8
  service:
    ports:
    - name: http-function-port
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      created-by: kubeless
      function: fieldglass-oauth-handler
  timeout: ""